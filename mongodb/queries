// insert document
db.publications.insertOne({
    title: "Systems and Methods for Big and Unstructured Data project",
    authors: [{
        name: "Gianluca Pizzuti",
        title: "student",
        countryCode: "IT",
        gender: "M"
    }, {
        name: "Melissande Simonin",
        title: "student",
        countryCode: "FR",
        gender: "F"
    }, {
        name: "Enrico Brunetti",
        title: "student",
        countryCode: "IT",
        gender: "M"
    }, {
        name: "Emanuele Paesano",
        title: "student",
        countryCode: "IT",
        gender: "M"
    }, {
        name: "Pietro Lodi Rizzini",
        title: "student",
        countryCode: "IT",
        gender: "M"
    }],
    keywords: ["Big", "Data"],
    publicationDate: ISODate('2022-11-01T05:17:05.350Z'),
    modificationDate: ISODate('2022-11-13T10:20:00.500Z'),
    pages: 100
})

// 2. Creation of two documents with same bibliography
db.publications.insertMany([{
    title: "SMBUD part 1",
    abstract: "ER model, Neo4j queries..",
    authors: [{
        name: "Cristal Oxlade",
        title: "Ing",
        email: "coxlade2@goodreads.com",
        countryCode: "RU",
        affiliation: "Siberian State Medical University",
        avatar: "https://robohash.org/etmollitiaautem.png?size=50x50",
        bitcoinAddress: "1AMDaHr3wGgrjE6HdExF4Bu1No6wkUP6Rt",
        gender: "F"
    }],
    publicationDate: ISODate('2022-11-02T11:10:35.000Z),
    modificationDate: ISODate('2022-11-02T11:15:35.000Z),
    pages: 103,
    bibliography: [ObjectId("63762190a67a2ca08dca4394")]
},
{
    title: "SMBUD part 2",
    abstract: "MongoDB queries..",
    authors: [{
        name: "Barry Matlock",
        title: "Dr",
        email: "bmatlock1@bing.com",
        countryCode: "CN",
        affiliation: "Inner Mongolia Normal University",
        avatar: "https://robohash.org/nemoautqui.png?size=50x50",
        bitcoinAddress: "1KPgsVqtjywLS3G7uBXnApSbrchscpfzsn",
        gender: "M"
    }],
    publicationDate: ISODate('2022-11-15T16:10:35.000Z'),
    modificationDate: ISODate('2022-11-16T11:10:35.000Z'),
    pages: 88,
    bibliography: [ObjectId("63762190a67a2ca08dca4394")]
}])

// 3. Publications on the same journal

db.publications.insertMany([
    {
        title: 'Ad maiora',
        journal: 'tempus',
        volume: 12,
        number: 5,
        pages: 5
    }, {
        title: 'Ora et labora',
        journal: 'tempus',
        volume: 12,
        number: 7,
        pages: 35
    }, {
        title: 'Mens sana in corpore sano',
        journal: 'tempus',
        volume: 12,
        number: 17,
        pages: 25
    }, {
        title: 'Verba volant, scripta manent',
        journal: 'tempus',
        volume: 36,
        number: 10,
        pages: 26
    }, {
        title: 'Tempus fugit',
        journal: 'tempus',
        volume: 36,
        number: 21,
        pages: 15
    }, {
        title: 'Ubi maior, minor cessat',
        journal: 'tempus',
        volume: 46,
        number: 21,
        pages: 17
    }
])

// 4. Pages number increase
db.publications.updateMany(
    {
        "$and": [{
            journal: "aenean auctor"
        }, {
            volume: { $gte: 20, $lte: 30 }
        }]
    }, {
    $inc: {
        pages: 5
    }
}
)

// 5. Last author deletion
db.publications.updateMany(
    {
        "$or": [{
            authors: { $size: 5 }
        }, {
            pages: { "$gt": 500 }
        }, {
            "$expr": { $lte: [{ $size: "$bibliography" }, 15] }
        }]
    }, {
    $pop: { authors: 1 }
}
)

// *******************
// QUERIES
// *******************


// 1. Volumes ranking of a journal
db.publications.aggregate([
    {
        $match: {
            journal: "tempus"
        }
    }, {
        $group: {
            _id: "$volume",
            articles_number: {
                $count: {}
            }
        }
    }, {
        $sort: {
            articles_number: -1
        }
    }
])

// 2. Authors and countries

db.publications.aggregate([
    {
        $match: {
            title: "Systems and Methods for Big and Unstructured Data project",
            pages: 100
}
    },
    {
        $addFields: {
            authorsAndCountries: {
                $map: {
                    input: " $authors ",
                    as: " currentAuthor ",
                    in: {
                        $concat: [
                            " $$currentAuthor.name ",
                            " - ",
                            " $$currentAuthor.countryCode "
                        ]
                    }
                }
            }
        }
    }
])

// 3. Booksâ€™ publication

db.publications.find({
    "$and": [{
        $or: [
            { "pages": { "$lt": 100 } },
            { "pages": { "$gt": 400 } }
        ]
    },
    { "publicationDate": { "$gt": ISODate('2000-01-01') } },
    { "publicationDate": { "$lt": ISODate('2001-01-01') } },
    ]
},
    { "title": 1, "publicationDate": 1, "pages": 1 }
).limit(5)

// 4. Book and Portugal

db.publications.aggregate([
    {
        "$match": {
            "authors.countryCode": "PT"
        }
    },
    {
        "$group": {
            "_id": "authors.countryCode", "count": { "$sum": 1 }
        }
    }
])

// 5. Women authors

db.publications.aggregate([
    {
        "$unwind": "$authors"
    },
    {
        "$match": {
            "authors.gender": "F"
        }
    },
    {
        "$group": { "_id": "authors.gender", "count": { "$sum": 1 } }
    }
])

// 6. Find authors that have written the greater number of publications
db.publications.aggregate([
    {
        "$unwind": {
            "path": "$authors"
        }
    }, {
        "$group": {
            "_id": "$authors.name",
            "country": { "$first": "$authors.countryCode" },
            "publicationsWritten": { "$sum": 1 }
        }
    }, {
        "$sort": {
            "publicationsWritten": -1
        }
    }, {
        "$limit": 5
    }
])

// 7. Return the number of male and female authors for publications that has at least 2 female authors.
db.publications.aggregate([
    {
        $match: {
            $and: [{
                "$expr": {
                    $gt: [{ $size: "$authors" }, 2]
                }
            }, {
                pages: { $gt: 200 }
            }
            ]
        }
    }, {
        $addFields: {
            femaleAuthors: {
                "$size": {
                    "$filter": {
                        input: "$authors",
                        as: "author",
                        cond: {
                            "$eq": ["$$author.gender", "F"]
                        }
                    }
                }
            },
            maleAuthors: {
                "$size": {
                    "$filter": {
                        input: "$authors",
                        as: "author",
                        cond: {
                            "$eq": ["$$author.gender", "M"]
                        }
                    }
                }
            }
        }
    }, {
        $match: {
            femaleAuthors: { $gt: 2 }
        }
    }, {
        $project: {
            _id: 0,
            title: 1,
            femaleAuthors: 1,
            maleAuthors: 1
        }
    }
])

// 8. Find the publication with the highest number of sub-sections.
db.publications.aggregate([{
    $project: {
        _id: 1,
        title: 1,
        numberOfSubSections: {
            $sum: {
                $map: {
                    input: '$sections',
                    'in': {
                        $size: '$$this.subsections'
                    }
                }
            }
        }
    }
},
{ $sort: { numberOfSubSections: -1 } },
{ $limit: 1 }
])

// 9. Find largest articles written by authors whose mail has a ".gov" or ".edu" domain.
db.publications.aggregate([
    { $unwind: '$authors' },
    {
        $match:
        {
            'authors.email':
                {
                    $regex: ^ [a - z0 -9._\% +-] + @[a - z0 - 9. -] +\.(?:| edu | gov)$/
                }
    }
},
    { $sort: { pages: -1 } },
    {
        $project:
        {
            title: 1,
            authors: { name: 1, email: 1, countryCode: 1, gender: 1 },
            pages: 1
        }
    },
    { $limit: 3 }
])

// 10. New Array exploring bibliography references
db.publications.aggregate([{
    $lookup: {
        from: "publications",
        let: {
            "pages": "$pages"
        },
        pipeline: [{
            $match: {
                $expr: {
                    $gte: ["$$pages", 500]
                }
            }
        }, {
            $limit: 1
        }, {
            $project: {
                title: 1,
                pages: 1
            }
        }],
        as: "citedPublications"
    }
}, {
    $limit: 2
}, {
    $project: {
        title: 1,
        pages: 1,
        citedPublications: 1
    }
}])
